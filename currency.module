<?php


// Copyright 2005 Khalid Baheyeldin http://2bits.com

function currency_help($section) {
  $output ="";

  switch ($section) {
    case 'admin/modules#description':
      $output = t("Currency conversion page. Requires currency_api.");
      break;
    case 'admin/help#currency':
    case 'admin/settings/currency':
      $output = t("This module provides currency conversion rates.");
      break;
  }

  return $output;
}
  
function currency_settings() {
  $output .= form_textfield(t("Default Currency From"), "currency_default_from",
    variable_get("currency_default_from", 'CAD'), 3, 3,
    t('Three letter symbol for default currency to convert from.'));

  $output .= form_textfield(t("Default Currency To"), "currency_default_to",
    variable_get("currency_default_to",   'USD'), 3, 3,
    t('Three letter symbol for default currency to convert to.'));

  $output .= form_textarea(t("Description"), "currency_description",
    variable_get("currency_description", t("This is the currency conversion page.")), 70, 7,
    t('This text will be displayed at the top of the currency conversion page'));

  $output .= form_textfield(t("Navigation link text"), "currency_overview_title",
    variable_get("currency_overview_title", t("currency conversion")), 35, 255,
    t("The text in the navigation link which points to the currency conversion page."));  

  return $output;
}  

function currency_perm() {
  return array ("use currency");
}

function currency_link($type, $node = 0, $main = 0) {
  global $user;

  $links = array();

  if ($type == 'page' && user_access('use currency')) {
          $links[] = l(t('currency'), 'currency');
  }

  return $links;
}

function currency_menu($may_cache) {
  $items = array();

  $access = user_access('use currency');
  $title  = t(variable_get("currency_overview_title", "currency conversion"));
  $path   = 'currency';

  $items[] = array(
	 'path'     => $path,
	 'title'    => $title,
	 'access'   => $access,
   'callback' => 'currency_page',
   'weight'   => 0 );

  return $items;
}

// Display the currency page
function currency_page() {
  $output = currency_contents ();

  print theme("page", $output );
}

// Display the form
function currency_form() {
 
 $edit = $_POST['edit'];

 $from   = $edit['currency_from'];
 $to     = $edit['currency_to'];
 $amount = $edit['currency_amount'];

 if (!isset($from)) {
   $from = variable_get('currency_default_from', 'CAD');
 }

 if (!isset($to)) {
   $to = variable_get('currency_default_to', 'USD');
 }

 if (!isset($amount)) {
   $amount = 1;
 }

 if (!is_numeric($amount)) {
   $amount = 1;
 }

 $output .= form_textfield(t('Amount'), 'currency_amount', $amount, 9, 9, t('Amount to convert'));
 $output .= form_select   (t('From'),   'currency_from', $from, currency_api_get_list());
 $output .= form_select   (t('To'),     'currency_to',   $to,   currency_api_get_list());
 $output .= form_submit   (t('Convert'),'button_convert');

 $form = form($output);

 return $form;
}


function currency_contents() {

 $edit = $_POST['edit'];

 $amount = $edit['currency_amount'];
 $from   = strtoupper($edit['currency_from']);
 $to     = strtoupper($edit['currency_to']);

 if (($amount != "") AND (!is_numeric($amount))) {
   drupal_set_message(t('Invalid Amount. Please enter a number'), 'error');
 }
 else {
   $output .= variable_get("currency_description", "This is the currency conversion page.");
   if (isset($_POST['button_convert'])) {
 	   $output .= currency_do_quote($from, $to, $amount);
   }
 }

 $output .= currency_form();

 return $output ;
}

function currency_detailed_quote ( $currency_from, $currency_to ) {
 
 $full_quote_url = 'http://finance.yahoo.com/q?s=';
 
 
 $url = $full_quote_url . $currency_from . $currency_to . '=X';

 return '<a target="_blank" title="'.
   t('History and Chart').'" href="'.$url.'">'.t('Detailed history and chart').'</a>';
}

function currency_do_quote( $currency_from, $currency_to, $amount = 1 ) {
  $ret = currency_api_convert($currency_from, $currency_to, $amount);
  if ($ret['status'] == FALSE) { 
    drupal_set_message(t('currency conversion error: ') . $ret['message']);
 	}
 	else {
    $result .= '<p>'. $amount .' '.
      currency_api_get_desc($currency_from) .' = '. $ret['value'] .' '.
      currency_api_get_desc($currency_to) . '</p>';

    $result .= '<p>'. currency_detailed_quote($currency_from, $currency_to).'</p>';
 	}

 return $result;
}

?>
